/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package githubmathmethodthings;

import static java.lang.Math.cos;
import static java.lang.Math.sin;

/**
 *
 * @author luoos2514
 */
public class mathMethodsGUI extends javax.swing.JFrame {

    /**
     * Creates new form mathMethodsGUI
     */
    public mathMethodsGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button = new javax.swing.JButton();
        otherButton = new javax.swing.JButton();
        anotherButton = new javax.swing.JButton();
        yetAnotherButton = new javax.swing.JButton();
        couldItReallyBeAFifthButton = new javax.swing.JButton();
        notButton = new javax.swing.JTextField();
        alsoNotButton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        button.setText("sin");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        otherButton.setText("cos");
        otherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherButtonActionPerformed(evt);
            }
        });

        anotherButton.setText("tan");
        anotherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anotherButtonActionPerformed(evt);
            }
        });

        yetAnotherButton.setText("√");
        yetAnotherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yetAnotherButtonActionPerformed(evt);
            }
        });

        couldItReallyBeAFifthButton.setText("round");
        couldItReallyBeAFifthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                couldItReallyBeAFifthButtonActionPerformed(evt);
            }
        });

        alsoNotButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(otherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(anotherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yetAnotherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(couldItReallyBeAFifthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(notButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(alsoNotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(notButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anotherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(otherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yetAnotherButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(couldItReallyBeAFifthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(alsoNotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** 
     * This method will take the numerical input given by a user in the 
     * "notButton" text field, then find it's sine ratio
     * For this method to be run, the user must give a numerical input, and 
     * press "button" (the button labeled with sin)
     * When this method is properly complete, it will display the sine ratio of
     * the given number in the "alsoNotButton" output box
     * @param evt 
     */
    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        double num = Double.parseDouble(notButton.getText());
        
        num = Math.toRadians(num);
        
        num = Math.sin(num);
        alsoNotButton.setText("" + num);
    }//GEN-LAST:event_buttonActionPerformed

    /** 
     * This method will take the numerical input given by a user in the 
     * "notButton" text field, then find it's cosine ratio
     * For this method to be run, the user must give a numerical input, and 
     * press "otherButton" (the button labeled with cos)
     * When this method is properly complete, it will display the cosine ratio 
     * of the given number in the "alsoNotButton" output box
     * @param evt 
     */
    private void otherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherButtonActionPerformed
        double num = Double.parseDouble(notButton.getText());
        
        num = Math.toRadians(num);
        
        num = Math.cos (num);
        alsoNotButton.setText("" + num);
    }//GEN-LAST:event_otherButtonActionPerformed

    /** 
     * This method will take the numerical input given by a user in the 
     * "notButton" text field, then find it's tangent ratio
     * For this method to be run, the user must give a numerical input, and 
     * press "anotherButton" (the button labeled with tan)
     * When this method is properly complete, it will display the tangent ratio 
     * of the given number in the "alsoNotButton" output box
     * @param evt 
     */
    private void anotherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anotherButtonActionPerformed
        double num = Double.parseDouble(notButton.getText());
        
        num = Math.toRadians(num);
        
        num = Math.tan(num);
        alsoNotButton.setText("" + num);
    }//GEN-LAST:event_anotherButtonActionPerformed

    /** 
     * This method will take the numerical input given by a user in the 
     * "notButton" text field, then find it's square root
     * For this method to be run, the user must give a numerical input, and 
     * press "yetAnotherButton" (the button labeled with √)
     * When this method is properly complete, it will display the square root of
     * the given number in the "alsoNotButton" output box
     * @param evt 
     */
    private void yetAnotherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yetAnotherButtonActionPerformed
        double num = Double.parseDouble(notButton.getText());
        
        num = Math.sqrt(num);
        alsoNotButton.setText("" + num);
    }//GEN-LAST:event_yetAnotherButtonActionPerformed

    /** 
     * This method will take the numerical input given by a user in the 
     * "notButton" text field, then round it to the nearest whole number
     * For this method to be run, the user must give a numerical input, and 
     * press "couldItReallyBeAFifthButton" (the button labeled with "round")
     * When this method is properly complete, it will display the given number
     * rounded to the nearest whole number in the "alsoNotButton" output box
     * @param evt 
     */
    private void couldItReallyBeAFifthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_couldItReallyBeAFifthButtonActionPerformed
        double num = Double.parseDouble(notButton.getText());
        
        num = Math.round(num);
        alsoNotButton.setText("" + num);
    }//GEN-LAST:event_couldItReallyBeAFifthButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mathMethodsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mathMethodsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mathMethodsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mathMethodsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mathMethodsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alsoNotButton;
    private javax.swing.JButton anotherButton;
    private javax.swing.JButton button;
    private javax.swing.JButton couldItReallyBeAFifthButton;
    private javax.swing.JTextField notButton;
    private javax.swing.JButton otherButton;
    private javax.swing.JButton yetAnotherButton;
    // End of variables declaration//GEN-END:variables
}
